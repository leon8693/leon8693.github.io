<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | 唯一的真理]]></title>
  <link href="http://leon8693.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://leon8693.github.io/"/>
  <updated>2014-04-25T15:07:31+08:00</updated>
  <id>http://leon8693.github.io/</id>
  <author>
    <name><![CDATA[leon]]></name>
    <email><![CDATA[bolatuleon@hotmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[python]]></title>
    <link href="http://leon8693.github.io/blog/2014/04/25/python/"/>
    <updated>2014-04-25T13:55:00+08:00</updated>
    <id>http://leon8693.github.io/blog/2014/04/25/python</id>
    <content type="html"><![CDATA[<h3>Class</h3>

<p>1.class 类名(object):
2.    &ldquo;类的说明文档&rdquo;
3.    属性
4.    初始方法<strong>init</strong>
5.    其他方法</p>

<p>```python
class myclass:  #自定义类，名称叫myclass</p>

<pre><code>'this  is my first class of python' #类的说明文档
a=100                               #类的属性,a是成员,可以用类名直接访问
def __init__(self,list='leon'):     #初始方法
    self.mylist=list                #实例属性可以动态的添加,此时是在构造时候添加完成
def myfang(self):                   #定义类的方法，必须由类的实例来调用
    print "class's fang"
def myname(self):
    print self.__class__.__name__
</code></pre>

<p>print myclass.a #用类明直接访问                                                                                                                                                                            <br/>
C=myclass() #实例化这个类
C.myfang() #调用类的方法实现
C.myname()
print C.mylist
```</p>

<h4>小知识</h4>

<p>这个参数定义在开头就可以在python脚本中添加中文注释了
```python</p>

<h1>&ndash;<em>&ndash; coding:utf-8 &ndash;</em></h1>

<p>```</p>
]]></content>
  </entry>
  
</feed>
